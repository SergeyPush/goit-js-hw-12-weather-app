{"version":3,"sources":["webpack:///./js/getGeoPosition.js","webpack:///./js/fetchWeather.js","webpack:///./js/app.js"],"names":["getGeoPosition","Promise","resolve","reject","options","navigator","geolocation","getCurrentPosition","fetchWeather","position","queryString","latitude","longitude","join","fetch","baseURL","weatherDetails","document","getElementById","location","querySelector","temp","humidity","wind","conditions","image","searchForm","displayWeather","obj","src","current","condition","icon","textContent","name","temp_c","wind_kph","text","showWeatherCard","classList","remove","PNotify","defaults","styling","icons","then","coords","res","json","loc","error","title","message","addEventListener","event","preventDefault","cityValue","target","elements","city","value","Error"],"mappings":"qKAUeA,EAVQ,WAKrB,OAAO,IAAIC,QAAQ,SAACC,EAASC,EAAQC,GACnCC,UAAUC,YAAYC,mBAAmBL,EAASC,EAAQC,MCA/CI,aAAA,SAASC,GACtB,IAAIC,EACoB,iBAAbD,EAETC,EAAc,CADkBD,EAAxBE,SAAwBF,EAAdG,WACkBC,KAAK,KAEzCH,EAAcD,EAGhB,OAAOK,MAASC,8EAAwBL,iBCPpCM,2CAAiBC,SAASC,eAAe,YACzCC,EAAWF,SAASG,cAAc,2BAClCC,EAAOJ,SAASG,cAAc,uBAC9BE,EAAWL,SAASG,cAAc,2BAClCG,EAAON,SAASG,cAAc,uBAC9BI,EAAaP,SAASG,cAAc,6BACpCK,EAAQR,SAASG,cAAc,YAC/BM,EAAaT,SAASC,eAAe,eA6C3C,SAASS,EAAeC,GACtBH,EAAMI,IAAN,SAAqBD,EAAIE,QAAQC,UAAUC,KAC3Cb,EAASc,YAAcL,EAAIT,SAASe,KACpCb,EAAKY,YAAcL,EAAIE,QAAQK,OAAS,KACxCb,EAASW,YAAcL,EAAIE,QAAQR,SAAW,IAC9CC,EAAKU,YAAcL,EAAIE,QAAQM,SAAW,MAC1CZ,EAAWS,YAAcL,EAAIE,QAAQC,UAAUM,KAGjD,SAASC,IACPtB,EAAeuB,UAAUC,OAAO,aArDlCC,IAAQC,SAASC,QAAU,WAC3BF,IAAQC,SAASE,MAAQ,WAEzB5C,IACG6C,KAAK,SAAA1B,GACJX,EAAaW,EAAS2B,QACnBD,KAAK,SAAAE,GAAG,OAAIA,EAAIC,SAChBH,KAAK,SAAAI,GACJtB,EAAesB,GACfX,QANR,MASS,SAAAY,GACLT,IAAQS,MAAM,CACZC,MAAO,QACPd,KAAI,GAAKa,EAAME,YAIrB1B,EAAW2B,iBAAiB,SAE5B,SAA0BC,GACxBA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,OAAOC,SAASC,KAAKC,MAC7CpD,EAAagD,GACVX,KAAK,SAAAE,GACJ,OAAOA,EAAIC,SAEZH,KAAK,SAAAI,GACJ,GAAIA,EAAIC,MACN,MAAM,IAAIW,MAAMZ,EAAIC,MAAME,SAE5Bd,IACAX,EAAesB,KATnB,MAWS,SAAAC,GACLT,IAAQS,MAAM,CACZC,MAAO,QACPd,KAAI,GAAKa,EAAME","file":"main.878adb8bf7819b1cdd51.js","sourcesContent":["const getGeoPosition = () => {\r\n  const options = {\r\n    timeout: 5000,\r\n    maximumAge: 30,\r\n  };\r\n  return new Promise((resolve, reject, options) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n};\r\n\r\nexport default getGeoPosition;\r\n","const key = 'f3ec9826f1d149aea8664106191107';\r\n\r\nconst request =\r\n  'http://api.apixu.com/v1/current.json?key=f3ec9826f1d149aea8664106191107&q=';\r\nconst baseURL = 'https://api.apixu.com/v1/current.json';\r\n\r\nexport default function(position) {\r\n  let queryString;\r\n  if (typeof position === 'object') {\r\n    const { latitude, longitude } = position;\r\n    queryString = [latitude, longitude].join(',');\r\n  } else {\r\n    queryString = position;\r\n  }\r\n\r\n  return fetch(`${baseURL}?key=${key}&q=${queryString}`);\r\n}\r\n","import getGeoPosition from './getGeoPosition';\r\nimport fetchWeather from './fetchWeather';\r\nimport PNotify from 'pnotify/dist/es/PNotify.js';\r\nimport PNotifyStyleMaterial from 'pnotify/dist/es/PNotifyStyleMaterial.js';\r\nimport PNotifyButtons from 'pnotify/dist/es/PNotifyButtons.js';\r\nimport 'pnotify/dist/PNotifyBrightTheme.css';\r\nimport 'material-design-icons/iconfont/material-icons.css';\r\n\r\nconst weatherDetails = document.getElementById('weather');\r\nconst location = document.querySelector(\"[data-field='location']\");\r\nconst temp = document.querySelector(\"[data-field='temp']\");\r\nconst humidity = document.querySelector(\"[data-field='humidity']\");\r\nconst wind = document.querySelector(\"[data-field='wind']\");\r\nconst conditions = document.querySelector(\"[data-field='conditions']\");\r\nconst image = document.querySelector('img.icon');\r\nconst searchForm = document.getElementById('search-form');\r\n\r\nPNotify.defaults.styling = 'material';\r\nPNotify.defaults.icons = 'material';\r\n\r\ngetGeoPosition()\r\n  .then(location => {\r\n    fetchWeather(location.coords)\r\n      .then(res => res.json())\r\n      .then(loc => {\r\n        displayWeather(loc);\r\n        showWeatherCard();\r\n      });\r\n  })\r\n  .catch(error => {\r\n    PNotify.error({\r\n      title: 'Error',\r\n      text: `${error.message}`,\r\n    });\r\n  });\r\n\r\nsearchForm.addEventListener('submit', handleSubmitForm);\r\n\r\nfunction handleSubmitForm(event) {\r\n  event.preventDefault();\r\n  const cityValue = event.target.elements.city.value;\r\n  fetchWeather(cityValue)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(loc => {\r\n      if (loc.error) {\r\n        throw new Error(loc.error.message);\r\n      }\r\n      showWeatherCard();\r\n      displayWeather(loc);\r\n    })\r\n    .catch(error => {\r\n      PNotify.error({\r\n        title: 'Error',\r\n        text: `${error.message}`,\r\n      });\r\n    });\r\n}\r\n\r\nfunction displayWeather(obj) {\r\n  image.src = `https:${obj.current.condition.icon}`;\r\n  location.textContent = obj.location.name;\r\n  temp.textContent = obj.current.temp_c + ' C';\r\n  humidity.textContent = obj.current.humidity + '%';\r\n  wind.textContent = obj.current.wind_kph + 'kph';\r\n  conditions.textContent = obj.current.condition.text;\r\n}\r\n\r\nfunction showWeatherCard() {\r\n  weatherDetails.classList.remove('is-hidden');\r\n}\r\n\r\nfunction hideWeatherCard() {\r\n  weatherDetails.classList.add('is-hidden');\r\n}\r\n"],"sourceRoot":""}